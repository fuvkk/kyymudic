from pyrogram.types import (
    CallbackQuery,
    InlineKeyboardButton,
    InlineKeyboardMarkup,
    InputMediaPhoto,
    Message,
)
from Music import BOT_NAME
from Music.config import GROUP, CHANNEL

def play_markup(videoid, user_id):
    buttons = [
        [
            InlineKeyboardButton(text="‚ñ∑", callback_data=f"resumevc2"),
            InlineKeyboardButton(text="II", callback_data=f"pausevc2"),
            InlineKeyboardButton(text="‚Ä£‚Ä£I", callback_data=f"skipvc2"),
            InlineKeyboardButton(text="‚ñ¢", callback_data=f"stopvc2"),
        ],[
            InlineKeyboardButton(text="‚á© …¢·¥á·¥õ ·¥Ä·¥ú·¥Ö…™·¥è‚Äã‚Äã", callback_data=f"gets audio|{videoid}|{user_id}"),
            InlineKeyboardButton(text="‚á© …¢·¥á·¥õ ·¥†…™·¥Ö·¥á·¥è", callback_data=f"gets video|{videoid}|{user_id}"),
        ],
        [      
            InlineKeyboardButton(text="‚â° ·¥ç·¥á…¥·¥ú", callback_data=f"other {videoid}|{user_id}"),   
            InlineKeyboardButton(text="‚Ü∫ ·¥Ñ ü·¥èÍú±·¥á", callback_data=f"close"),
        ],
    ]
    return buttons


def others_markup(videoid, user_id):
    buttons = [
        [
            InlineKeyboardButton(text="‚ñ∑", callback_data=f"resumevc2"),
            InlineKeyboardButton(text="II", callback_data=f"pausevc2"),
            InlineKeyboardButton(text="‚Ä£‚Ä£I", callback_data=f"skipvc2"),
            InlineKeyboardButton(text="‚ñ¢", callback_data=f"stopvc2"),
        ],
        [
            InlineKeyboardButton(text="‚ûï ·¥Ä·¥Ö·¥Ö ·¥ú Ä  ü…™s·¥õ‚Äã", callback_data=f'playlist {videoid}|{user_id}'),
            InlineKeyboardButton(text="‚ûï ·¥Ä·¥Ö·¥Ö …¢ Ä·¥ò  ü…™s·¥õ‚Äã", callback_data=f'group_playlist {videoid}|{user_id}'),
        ],
        [
            InlineKeyboardButton(
                text="‚á© …¢·¥á·¥õ ·¥Ä·¥ú·¥Ö…™·¥è", callback_data=f"gets audio|{videoid}|{user_id}"
            ),
            InlineKeyboardButton(
                text="‚á© …¢·¥á·¥õ ·¥†…™·¥Ö·¥á·¥è", callback_data=f"gets video|{videoid}|{user_id}"
            ),
        ],
        [
            InlineKeyboardButton(
                text="‚å´", callback_data=f"goback {videoid}|{user_id}"
            ),
            InlineKeyboardButton(text="·¥Ñ ü·¥èÍú±·¥á", callback_data=f"close2"),
        ],
    ]
    return buttons


play_keyboard = InlineKeyboardMarkup(
    [
        [
            InlineKeyboardButton("‚ñ∑", callback_data="resumevc"),
            InlineKeyboardButton("II", callback_data="pausevc"),
            InlineKeyboardButton("‚Ä£‚Ä£I", callback_data="skipvc"),
            InlineKeyboardButton("‚ñ¢", callback_data="stopvc"),
        ],
        [InlineKeyboardButton("·¥Ñ ü·¥èÍú±·¥á", callback_data="close")],
    ]
)


def audio_markup(videoid, user_id):
    buttons = [
        [
            InlineKeyboardButton(text="‚ñ∑", callback_data=f"resumevc2"),
            InlineKeyboardButton(text="II", callback_data=f"pausevc2"),
            InlineKeyboardButton(text="‚Ä£‚Ä£I", callback_data=f"skipvc2"),
            InlineKeyboardButton(text="‚ñ¢", callback_data=f"stopvc2"),
        ],
        [InlineKeyboardButton(text="·¥Ñ ü·¥èÍú±·¥á", callback_data="close2")],
    ]
    return buttons


def search_markup(
    ID1,
    duration1,
    user_id,
    query,
):
    buttons = [
        [
            InlineKeyboardButton(
                text="·¥Ñ·¥è…¥Íú∞…™ Ä·¥ç", callback_data=f"Music2 {ID1}|{duration1}|{user_id}"
            ),
        ],
        [
            InlineKeyboardButton(
                text="·¥Ñ·¥Ä…¥·¥Ñ·¥á ü", callback_data=f"ppcl2 smex|{user_id}"
            ),
        ],
    ]
    return buttons


def personal_markup(link):
    buttons = [
        [InlineKeyboardButton(text="·¥õ·¥è…¥·¥õ·¥è…¥ ·¥Ö…™  è·¥è·¥ú·¥õ·¥ú ô·¥á", url=f"{link}")],
        [InlineKeyboardButton(text="·¥Ñ ü·¥èÍú±·¥á", callback_data=f"close2")],
    ]
    return buttons


start_keyboard = InlineKeyboardMarkup(
    [
        [
            InlineKeyboardButton(
                "üìö ·¥Ö·¥ÄÍú∞·¥õ·¥Ä Ä ·¥ò·¥á Ä…™…¥·¥õ·¥Ä ú‚Äã üìö", url="https://telegra.ph/“° è è-·¥áx-12-15"
            )
        ],
        [InlineKeyboardButton("·¥Ñ ü·¥èÍú±·¥á", callback_data="close2")],
    ]
)

confirm_keyboard = InlineKeyboardMarkup(
    [
        [
            InlineKeyboardButton(" è·¥Ä", callback_data="cbdel"),
            InlineKeyboardButton("·¥õ…™·¥Ö·¥Ä·¥ã", callback_data="close2"),
        ]
    ]
)

confirm_group_keyboard = InlineKeyboardMarkup(
    [
        [
            InlineKeyboardButton(" è·¥Ä", callback_data="cbgroupdel"),
            InlineKeyboardButton("·¥õ…™·¥Ö·¥Ä·¥ã", callback_data="close2"),
        ]
    ]
)

close_keyboard = InlineKeyboardMarkup(
    [[InlineKeyboardButton("·¥Ñ ü·¥èÍú±·¥á", callback_data="close2")]]
)

play_list_keyboard = InlineKeyboardMarkup( 
            [
                [
                    InlineKeyboardButton(
                        "‚ûï ·¥ús·¥á Ä ·¥ò ü·¥Ä è ü…™s·¥õ‚Äã", callback_data="P_list"
                    ),
                    InlineKeyboardButton(
                        "‚ûï …¢ Ä·¥è·¥ú·¥ò ·¥ò ü·¥Ä è ü…™s·¥õ‚Äã‚Äã", callback_data="G_list"
                    )
                ],
                [
                    InlineKeyboardButton(
                        "·¥Ñ ü·¥èÍú±·¥á", callback_data="close2"
                    )
                ]
            ]
        )

def playlist_markup(user_name, user_id):
    buttons= [
            [
                InlineKeyboardButton(text=f"…¢ Ä·¥è·¥ú·¥òs", callback_data=f'play_playlist {user_id}|group'),
            ],
            [
                InlineKeyboardButton(text=f"{user_name[:8]}", callback_data=f'play_playlist {user_id}|personal'),
            ],
            [
                InlineKeyboardButton(text="·¥Ñ ü·¥èÍú±·¥á", callback_data="close2")              
            ],
        ]
    return buttons


def start_pannel():
    if not CHANNEL and not GROUP:
        buttons = [
            [
                InlineKeyboardButton(
                    text="üîß s·¥á·¥õ·¥õ…™…¥…¢s", callback_data="settingm"
                )
            ],
        ]
        return f"üéõ  **This is {BOT_NAME}**", buttons
    if not CHANNEL and GROUP:
        buttons = [
            [
                InlineKeyboardButton(
                    text="üîß s·¥á·¥õ·¥õ…™…¥…¢s", callback_data="settingm"
                )
            ],
            [
                InlineKeyboardButton(
                    text="‚ú® s·¥ú·¥ò·¥ò·¥è Ä·¥õ", url=f"https://t.me/{GROUP}"
                ),
            ],
        ]
        return f"üéõ  **This is {MUSIC_BOT_NAME}*", buttons
    if CHANNEL and not GROUP:
        buttons = [
            [
                InlineKeyboardButton(
                    text="üîß s·¥á·¥õ·¥õ…™…¥…¢s", callback_data="settingm"
                )
            ],
            [
                InlineKeyboardButton(
                    text="‚ú® ·¥Ñ ú·¥Ä…¥…¥·¥á ü", url=f"https://t.me/{GROUP}"
                ),
            ],
        ]
        return f"üéõ  **This is {MUSIC_BOT_NAME}**", buttons
    if CHANNEL and GROUP:
        buttons = [
            [
                InlineKeyboardButton(
                    text="üîß s·¥á·¥õ·¥õ…™…¥…¢s", callback_data="settingm"
                )
            ],
            [
                InlineKeyboardButton(
                    text="‚ú® ·¥Ñ ú·¥Ä…¥…¥·¥á ü", url=f"https://t.me/{CHANNEL}"
                ),
                InlineKeyboardButton(
                    text="‚ú® s·¥ú·¥ò·¥ò·¥è Ä·¥õ", url=f"https://t.me/{GROUP}"
                ),
            ],
        ]
        return f"üéõ  **This is {BOT_NAME}**", buttons


def private_panel():
    if not CHANNEL and not GROUP:
        buttons = [
            [
                InlineKeyboardButton(
                    "‚ûï ·¥Ä·¥Ö·¥Ö ·¥ç·¥á ·¥õ·¥è  è·¥è·¥ú Ä …¢ Ä·¥è·¥ú·¥òs",
                    url=f"https://t.me/{BOT_USERNAME}?startgroup=true",
                )
            ],
        ]
        return f"üéõ  **This is {BOT_NAME}**", buttons
    if not CHANNEL and GROUP:
        buttons = [
            [
                InlineKeyboardButton(
                    "‚ûï ·¥Ä·¥Ö·¥Ö ·¥ç·¥á ·¥õ·¥è  è·¥è·¥ú Ä …¢ Ä·¥è·¥ú·¥ès",
                    url=f"https://t.me/{BOT_USERNAME}?startgroup=true",
                )
            ],
            [
                InlineKeyboardButton(
                    text="‚ú® s·¥ú·¥ò·¥ò·¥è Ä·¥õ", url=f"https://t.me/{GROUP}"
                ),
            ],
        ]
        return f"üéõ  **This is {BOT_NAME}*", buttons
    if CHANNEL and not GROUP:
        buttons = [
            [
                InlineKeyboardButton(
                    "‚ûï ·¥Ä·¥Ö·¥Ö ·¥ç·¥á ·¥õ·¥è  è·¥è·¥ú Ä …¢ Ä·¥è·¥ú·¥òs",
                    url=f"https://t.me/{BOT_USERNAME}?startgroup=true",
                )
            ],
            [
                InlineKeyboardButton(
                    text="‚ú® ·¥Ñ ú·¥Ä…¥…¥·¥á ü", url=f"https://t.me/{GROUP}"
                ),
            ],
        ]
        return f"üéõ  **This is {BOT_NAME}**", buttons
    if CHANNEL and GROUP:
        buttons = [
            [
                InlineKeyboardButton(
                    "‚ûï ·¥Ä·¥Ö·¥Ö ·¥ç·¥á ·¥õ·¥è  è·¥è·¥ú Ä …¢ Ä·¥è·¥ú·¥òs",
                    url=f"https://t.me/{BOT_USERNAME}?startgroup=true",
                )
            ],
            [
                InlineKeyboardButton(
                    text="‚ú® ·¥Ñ ú·¥Ä…¥…¥·¥á ü", url=f"https://t.me/{CHANNEL}"
                ),
                InlineKeyboardButton(
                    text="‚ú® s·¥ú·¥ò·¥ò·¥è Ä·¥õ", url=f"https://t.me/{GROUP}"
                ),
            ],
        ]
        return f"üéõ  **This is {MUSIC_BOT_NAME}**", buttons


def setting_markup():
    buttons = [
        [
            InlineKeyboardButton(text="üîà ·¥Ä·¥ú·¥Ö…™·¥è «´·¥ú·¥Ä ü…™·¥õ è", callback_data="AQ"),
            InlineKeyboardButton(text="üéö ·¥Ä·¥ú·¥Ö…™·¥è ·¥†·¥è ü·¥ú·¥ç·¥á", callback_data="AV"),
        ],
        [
            InlineKeyboardButton(
                text="üë• ·¥Ä·¥ú·¥õ ú·¥è Ä…™·¥¢·¥á·¥Ö ·¥ús·¥á Äs", callback_data="AU"
            ),
            InlineKeyboardButton(
                text="üíª ·¥Ö·¥Äs ú ô·¥è·¥Ä Ä·¥Ö", callback_data="Dashboard"
            ),
        ],
        [
            InlineKeyboardButton(text="‚úñÔ∏è ·¥Ñ ü·¥ès·¥á", callback_data="close"),
        ],
    ]
    return f"üîß  **{BOT_NAME} Settings**", buttons


def volmarkup():
    buttons = [
        [
            InlineKeyboardButton(
                text="üîÑ  Ä·¥ás·¥á·¥õ ·¥Ä·¥ú·¥Ö…™·¥è ·¥†·¥è ü·¥ú·¥ç·¥á üîÑ", callback_data="HV"
            )
        ],
        [
            InlineKeyboardButton(text="üîà  ü·¥è·¥° ·¥†·¥è ü", callback_data="LV"),
            InlineKeyboardButton(text="üîâ ·¥ç·¥á·¥Ö…™·¥ú·¥ç ·¥†·¥è ü", callback_data="MV"),
        ],
        [
            InlineKeyboardButton(text="üîä  ú…™…¢ ú ·¥†·¥è ü", callback_data="HV"),
            InlineKeyboardButton(text="üîà ·¥Ä·¥ç·¥ò ü…™“ì…™·¥á·¥Ö ·¥†·¥è ü", callback_data="VAM"),
        ],
        [
            InlineKeyboardButton(
                text="üîΩ ·¥Ñ·¥ús·¥õ·¥è·¥ç ·¥†·¥è ü·¥ú·¥ç·¥á üîΩ", callback_data="Custommarkup"
            )
        ],
        [InlineKeyboardButton(text="üîô  ô·¥Ä·¥Ñ·¥ã", callback_data="settingm")],
    ]
    return f"üîß  **{BOT_NAME} Settings**", buttons


def custommarkup():
    buttons = [
        [
            InlineKeyboardButton(text="+10", callback_data="PTEN"),
            InlineKeyboardButton(text="-10", callback_data="MTEN"),
        ],
        [
            InlineKeyboardButton(text="+25", callback_data="PTF"),
            InlineKeyboardButton(text="-25", callback_data="MTF"),
        ],
        [
            InlineKeyboardButton(text="+50", callback_data="PFZ"),
            InlineKeyboardButton(text="-50", callback_data="MFZ"),
        ],
        [InlineKeyboardButton(text="üîº ·¥Ñ·¥ús·¥õ·¥è·¥ç ·¥†·¥è ü·¥ú·¥ç·¥á üîº", callback_data="AV")],
    ]
    return f"üîß  **{BOT_NAME} Settings**", buttons


def usermarkup():
    buttons = [
        [
            InlineKeyboardButton(text="üë• ·¥á·¥† Ä è·¥è…¥·¥á", callback_data="EVE"),
            InlineKeyboardButton(text="üôç ·¥Ä·¥Ö·¥ç…™…¥s", callback_data="AMS"),
        ],
        [
            InlineKeyboardButton(
                text="üìã ·¥Ä·¥ú·¥õ ú·¥è Ä…™·¥¢·¥á·¥Ö ·¥ús·¥á Ä  ü…™s·¥õ", callback_data="USERLIST"
            )
        ],
        [InlineKeyboardButton(text="üîô  ô·¥Ä·¥Ñ·¥ã", callback_data="settingm")],
    ]
    return f"üîß  **{BOT_NAME} Settings**", buttons


def dashmarkup():
    buttons = [
        [
            InlineKeyboardButton(text="‚úîÔ∏è ·¥ú·¥ò·¥õ…™·¥ç·¥á", callback_data="UPT"),
            InlineKeyboardButton(text="üíæ  Ä·¥Ä·¥ç", callback_data="RAT"),
        ],
        [
            InlineKeyboardButton(text="üíª ·¥Ñ·¥ò·¥ú", callback_data="CPT"),
            InlineKeyboardButton(text="üíΩ ·¥Ö…™s·¥ã", callback_data="DIT"),
        ],
        [InlineKeyboardButton(text="üîô  ô·¥Ä·¥Ñ·¥ã", callback_data="settingm")],
    ]
    return f"üîß  **{BOT_NAME} Settings**", buttons


stats1 = InlineKeyboardMarkup(
    [
        [
            InlineKeyboardButton(
                text="s ès·¥õ·¥á·¥ç s·¥õ·¥Ä·¥õs", callback_data=f"sys_stats"
            ),
            InlineKeyboardButton(
                text="s·¥õ·¥è Ä·¥Ä…¢·¥á s·¥õ·¥Ä·¥õs", callback_data=f"sto_stats"
            ),
        ],
        [
            InlineKeyboardButton(
                text=" ô·¥è·¥õ s·¥õ·¥Ä·¥õs", callback_data=f"bot_stats"
            ),
            InlineKeyboardButton(
                text="·¥Äss…™s·¥õ·¥Ä…¥·¥õ s·¥õ·¥Ä·¥õs", callback_data=f"assis_stats"
            )
        ],
    ]
)

stats2 = InlineKeyboardMarkup(
    [
        [
            InlineKeyboardButton(
                text="…¢·¥á…¥·¥á Ä·¥Ä ü s·¥õ·¥Ä·¥õs", callback_data=f"gen_stats"
            ),
            InlineKeyboardButton(
                text="s·¥õ·¥è Ä·¥Ä…¢·¥á s·¥õ·¥Ä·¥õs", callback_data=f"sto_stats"
            ),
        ],
        [
            InlineKeyboardButton(
                text=" ô·¥è·¥õ s·¥õ·¥Ä·¥õs", callback_data=f"bot_stats"
            ),
            InlineKeyboardButton(
                text="·¥Äss…™s·¥õ·¥Ä…¥·¥õ s·¥õ·¥Ä·¥õs", callback_data=f"assis_stats"
            )
        ],
    ]
)

stats3 = InlineKeyboardMarkup(
    [
        [
            InlineKeyboardButton(
                text="s ès·¥õ·¥á·¥ç s·¥õ·¥Ä·¥õs", callback_data=f"sys_stats"
            ),
            InlineKeyboardButton(
                text="…¢·¥á…¥·¥á Ä·¥Ä ü s·¥õ·¥Ä·¥õs", callback_data=f"gen_stats"
            ),
        ],
        [
            InlineKeyboardButton(
                text=" ô·¥è·¥õ s·¥õ·¥Ä·¥õs", callback_data=f"bot_stats"
            ),            
            InlineKeyboardButton(
                text="·¥Äss…™s·¥õ·¥Ä…¥·¥õ s·¥õ·¥Ä·¥õs", callback_data=f"assis_stats"
            )
        ],
    ]
)

stats4 = InlineKeyboardMarkup(
    [
        [
            InlineKeyboardButton(
                text="s ès·¥õ·¥á·¥ç s·¥õ·¥Ä·¥õs", callback_data=f"sys_stats"
            ),
            InlineKeyboardButton(
                text="s·¥õ·¥è Ä·¥Ä…¢·¥á s·¥õ·¥Ä·¥õs", callback_data=f"sto_stats"
            ),
        ],
        [
            InlineKeyboardButton(
                text="…¢·¥á…¥·¥á Ä·¥Ä ü s·¥õ·¥Ä·¥õs", callback_data=f"gen_stats"
            ),
            InlineKeyboardButton(
                text="·¥Äss…™s·¥õ·¥Ä…¥·¥õ s·¥õ·¥Ä·¥õs", callback_data=f"assis_stats"
            )
        ],
    ]
)


stats5 = InlineKeyboardMarkup(
    [
        [
            InlineKeyboardButton(
                text="s ès·¥õ·¥á·¥ç s·¥õ·¥Ä·¥õs", callback_data=f"sys_stats"
            ),
            InlineKeyboardButton(
                text="s ès·¥õ·¥á·¥ç s·¥õ·¥Ä·¥õs", callback_data=f"sto_stats"
            ),
        ],
        [
            InlineKeyboardButton(
                text=" ô·¥è·¥õ s·¥õ·¥Ä·¥õs", callback_data=f"bot_stats"
            ),
            InlineKeyboardButton(
                text="…¢·¥á…¥·¥á Ä·¥Ä ü s·¥õ·¥Ä·¥õs", callback_data=f"gen_stats"
            )
        ],
    ]
)


stats6 = InlineKeyboardMarkup(
    [
        [
            InlineKeyboardButton(
                text="…¢·¥á·¥õ·¥õ…™…¥…¢ ·¥Äss…™s·¥õ·¥Ä…¥·¥õ s·¥õ·¥Ä·¥õs....",
                callback_data=f"wait_stats",
            )
        ]
    ]
)
